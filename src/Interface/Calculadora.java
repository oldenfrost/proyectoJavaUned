/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interface;

import static Interface.Historial.historialCalculados;

import static Interface.Planilla.planillasImpresas;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;

import java.text.DecimalFormat;
import java.util.*;

import javax.swing.*;

/**
 *
 * @author Pc
 */
public class Calculadora extends javax.swing.JPanel {

    /**
     * Creates new form Calculadora
     */
    public Calculadora() {
        initComponents();
        empleados = new cEmpleado();

        ListaEmpleados = empleados.getArrayList();
        historialCalculados.clear();
        leerArchivo();
        leerArchivoPlanilla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ubicacionCalculadora = new javax.swing.JPanel();
        ingresarText = new javax.swing.JLabel();
        salarioCalcular = new javax.swing.JTextField();
        ahorrosText = new javax.swing.JLabel();
        ahorroN = new javax.swing.JTextField();
        otrosText = new javax.swing.JLabel();
        otrosR = new javax.swing.JTextField();
        calcular = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        ASC = new javax.swing.JCheckBox();
        CC = new javax.swing.JCheckBox();
        ANC = new javax.swing.JCheckBox();
        ORC = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nombreUsuario = new javax.swing.JLabel();
        ubicacionResultados = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();
        textS = new javax.swing.JLabel();
        Cooperativa = new javax.swing.JLabel();
        textAN = new javax.swing.JLabel();
        textOR = new javax.swing.JLabel();
        textSN = new javax.swing.JLabel();
        s = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        aN = new javax.swing.JLabel();
        oR = new javax.swing.JLabel();
        sN = new javax.swing.JLabel();
        panel2 = new javax.swing.JPanel();
        textSB = new javax.swing.JLabel();
        textSS = new javax.swing.JLabel();
        textCP = new javax.swing.JLabel();
        textBP = new javax.swing.JLabel();
        textIR = new javax.swing.JLabel();
        sB = new javax.swing.JLabel();
        sS = new javax.swing.JLabel();
        cP = new javax.swing.JLabel();
        bP = new javax.swing.JLabel();
        iR = new javax.swing.JLabel();

        setBackground(new java.awt.Color(231, 236, 239));
        setAutoscrolls(true);
        setMaximumSize(new java.awt.Dimension(750, 434));
        setMinimumSize(new java.awt.Dimension(750, 434));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(750, 434));

        ubicacionCalculadora.setBackground(new java.awt.Color(231, 236, 239));
        ubicacionCalculadora.setMaximumSize(new java.awt.Dimension(750, 240));
        ubicacionCalculadora.setMinimumSize(new java.awt.Dimension(750, 240));
        ubicacionCalculadora.setPreferredSize(new java.awt.Dimension(750, 240));

        ingresarText.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ingresarText.setForeground(new java.awt.Color(139, 140, 137));
        ingresarText.setText("Ingrese el Salario a Calcular");

        salarioCalcular.setForeground(new java.awt.Color(139, 140, 137));
        salarioCalcular.setText("₡0");
        salarioCalcular.setEnabled(false);
        salarioCalcular.setMaximumSize(new java.awt.Dimension(208, 25));
        salarioCalcular.setMinimumSize(new java.awt.Dimension(208, 25));
        salarioCalcular.setPreferredSize(new java.awt.Dimension(208, 25));
        salarioCalcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ingresarSalario(evt);
            }
        });

        ahorrosText.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        ahorrosText.setForeground(new java.awt.Color(139, 140, 137));
        ahorrosText.setText("Ahorro Navideño");

        ahorroN.setForeground(new java.awt.Color(139, 140, 137));
        ahorroN.setText("cantidad a digitar es en porcentaje");
        ahorroN.setEnabled(false);
        ahorroN.setMaximumSize(new java.awt.Dimension(208, 26));
        ahorroN.setMinimumSize(new java.awt.Dimension(208, 26));
        ahorroN.setPreferredSize(new java.awt.Dimension(208, 25));
        ahorroN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IngresarAhorro(evt);
            }
        });

        otrosText.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        otrosText.setForeground(new java.awt.Color(139, 140, 137));
        otrosText.setText("Otros Rebajos");

        otrosR.setForeground(new java.awt.Color(139, 140, 137));
        otrosR.setText("cantidad de rabjo en colones ");
        otrosR.setEnabled(false);
        otrosR.setMaximumSize(new java.awt.Dimension(208, 25));
        otrosR.setMinimumSize(new java.awt.Dimension(208, 25));
        otrosR.setPreferredSize(new java.awt.Dimension(208, 25));
        otrosR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                IngresarRebajos(evt);
            }
        });
        otrosR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otrosRActionPerformed(evt);
            }
        });

        calcular.setBackground(new java.awt.Color(39, 76, 119));
        calcular.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        calcular.setForeground(new java.awt.Color(231, 236, 239));
        calcular.setText("Calcular");
        calcular.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        calcular.setBorderPainted(false);
        calcular.setEnabled(false);
        calcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                calcularSalarios(evt);
            }
        });
        calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(231, 236, 239));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119), 4));
        jPanel1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                click(evt);
            }
        });

        ASC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ASC.setForeground(new java.awt.Color(139, 140, 137));
        ASC.setText("Asociación Solidarista");
        ASC.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ASC.setEnabled(false);

        CC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CC.setForeground(new java.awt.Color(139, 140, 137));
        CC.setText("Cooperativa");
        CC.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CC.setEnabled(false);

        ANC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ANC.setForeground(new java.awt.Color(139, 140, 137));
        ANC.setText("Ahorro Navideño");
        ANC.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ANC.setEnabled(false);

        ORC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ORC.setForeground(new java.awt.Color(139, 140, 137));
        ORC.setText("Otros Rebajos");
        ORC.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ORC.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ASC)
                    .addComponent(CC)
                    .addComponent(ANC)
                    .addComponent(ORC)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ASC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CC)
                .addGap(12, 12, 12)
                .addComponent(ANC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ORC)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(39, 76, 119));
        jLabel13.setText("ID");

        id.setForeground(new java.awt.Color(139, 140, 137));
        id.setText("Ingrese el Id del usuario");
        id.setMaximumSize(new java.awt.Dimension(145, 26));
        id.setMinimumSize(new java.awt.Dimension(145, 26));
        id.setPreferredSize(new java.awt.Dimension(145, 26));
        id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ingresarId(evt);
            }
        });

        buscar.setBackground(new java.awt.Color(39, 76, 119));
        buscar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        buscar.setForeground(new java.awt.Color(231, 236, 239));
        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/buscar.png"))); // NOI18N
        buscar.setText("Buscar");
        buscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buscar.setBorderPainted(false);
        buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buscar(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(39, 76, 119));
        jLabel1.setText("USUARIO: ");

        nombreUsuario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nombreUsuario.setForeground(new java.awt.Color(139, 140, 137));
        nombreUsuario.setText("El nombre del usario aparecera aqui una vez sea encontrado");
        nombreUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119), 3));

        javax.swing.GroupLayout ubicacionCalculadoraLayout = new javax.swing.GroupLayout(ubicacionCalculadora);
        ubicacionCalculadora.setLayout(ubicacionCalculadoraLayout);
        ubicacionCalculadoraLayout.setHorizontalGroup(
            ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ubicacionCalculadoraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ubicacionCalculadoraLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ubicacionCalculadoraLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ingresarText)
                            .addComponent(ahorrosText)
                            .addComponent(otrosText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ahorroN, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(salarioCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(otrosR, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ubicacionCalculadoraLayout.setVerticalGroup(
            ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ubicacionCalculadoraLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ubicacionCalculadoraLayout.createSequentialGroup()
                        .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ingresarText)
                            .addComponent(salarioCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ubicacionCalculadoraLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ubicacionCalculadoraLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ahorroN, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ahorrosText))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(otrosR, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(otrosText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calcular))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ubicacionCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        ubicacionResultados.setBackground(new java.awt.Color(231, 236, 239));
        ubicacionResultados.setMaximumSize(new java.awt.Dimension(725, 217));
        ubicacionResultados.setMinimumSize(new java.awt.Dimension(725, 217));
        ubicacionResultados.setPreferredSize(new java.awt.Dimension(725, 217));

        panel1.setBackground(new java.awt.Color(231, 236, 239));
        panel1.setMaximumSize(new java.awt.Dimension(350, 212));
        panel1.setMinimumSize(new java.awt.Dimension(350, 212));
        panel1.setPreferredSize(new java.awt.Dimension(350, 212));

        textS.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textS.setForeground(new java.awt.Color(39, 76, 119));
        textS.setText("Solidarista");

        Cooperativa.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        Cooperativa.setForeground(new java.awt.Color(39, 76, 119));
        Cooperativa.setText("Cooperativa");

        textAN.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textAN.setForeground(new java.awt.Color(39, 76, 119));
        textAN.setText("Ahorro Navideño");

        textOR.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textOR.setForeground(new java.awt.Color(39, 76, 119));
        textOR.setText("Otros Rebajos");

        textSN.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textSN.setForeground(new java.awt.Color(39, 76, 119));
        textSN.setText("Salario Neto");

        s.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        s.setForeground(new java.awt.Color(139, 140, 137));
        s.setText("₡0");
        s.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        c.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        c.setForeground(new java.awt.Color(139, 140, 137));
        c.setText("₡0");
        c.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        aN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        aN.setForeground(new java.awt.Color(139, 140, 137));
        aN.setText("₡0");
        aN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        oR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        oR.setForeground(new java.awt.Color(139, 140, 137));
        oR.setText("₡0");
        oR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        sN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sN.setForeground(new java.awt.Color(139, 140, 137));
        sN.setText("₡0");
        sN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textSN)
                    .addComponent(textOR)
                    .addComponent(textAN)
                    .addComponent(textS)
                    .addComponent(Cooperativa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aN, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sN, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(oR, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(textS)
                        .addGap(18, 18, 18)
                        .addComponent(Cooperativa)
                        .addGap(18, 18, 18)
                        .addComponent(textAN)
                        .addGap(18, 18, 18)
                        .addComponent(textOR)
                        .addGap(18, 18, 18)
                        .addComponent(textSN))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel1Layout.createSequentialGroup()
                        .addComponent(s)
                        .addGap(18, 18, 18)
                        .addComponent(c)
                        .addGap(18, 18, 18)
                        .addComponent(aN)
                        .addGap(18, 18, 18)
                        .addComponent(oR)
                        .addGap(18, 18, 18)
                        .addComponent(sN)))
                .addGap(24, 24, 24))
        );

        panel2.setBackground(new java.awt.Color(231, 236, 239));
        panel2.setPreferredSize(new java.awt.Dimension(350, 217));

        textSB.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textSB.setForeground(new java.awt.Color(39, 76, 119));
        textSB.setText("Salario Bruto");

        textSS.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textSS.setForeground(new java.awt.Color(39, 76, 119));
        textSS.setText("Seguro Social");

        textCP.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textCP.setForeground(new java.awt.Color(39, 76, 119));
        textCP.setText("Cuota Pensión");

        textBP.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textBP.setForeground(new java.awt.Color(39, 76, 119));
        textBP.setText("Ao Banco Popular");

        textIR.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textIR.setForeground(new java.awt.Color(39, 76, 119));
        textIR.setText("Impuesto de Renta");

        sB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sB.setForeground(new java.awt.Color(139, 140, 137));
        sB.setText("₡0");
        sB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        sS.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sS.setForeground(new java.awt.Color(139, 140, 137));
        sS.setText("₡0");
        sS.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        cP.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cP.setForeground(new java.awt.Color(139, 140, 137));
        cP.setText("₡0");
        cP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        bP.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bP.setForeground(new java.awt.Color(139, 140, 137));
        bP.setText("₡0");
        bP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        iR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        iR.setForeground(new java.awt.Color(139, 140, 137));
        iR.setText("₡0");
        iR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(39, 76, 119)));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(textIR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(iR, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(textCP)
                            .addComponent(textSB)
                            .addComponent(textSS))
                        .addContainerGap(9, Short.MAX_VALUE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cP, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(textBP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bP, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(sS, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sB, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textSB)
                    .addComponent(sB))
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textSS)
                    .addComponent(sS))
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textCP)
                    .addComponent(cP))
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBP)
                    .addComponent(bP))
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textIR)
                    .addComponent(iR))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout ubicacionResultadosLayout = new javax.swing.GroupLayout(ubicacionResultados);
        ubicacionResultados.setLayout(ubicacionResultadosLayout);
        ubicacionResultadosLayout.setHorizontalGroup(
            ubicacionResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ubicacionResultadosLayout.createSequentialGroup()
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ubicacionResultadosLayout.setVerticalGroup(
            ubicacionResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ubicacionCalculadora, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                    .addComponent(ubicacionResultados, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ubicacionCalculadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(ubicacionResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ingresarId(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresarId
        empleados = new cEmpleado();
        ListaEmpleados = empleados.getArrayList();
        id.setText("");
        id.setForeground(azulOscuro);
        this.salarioCalcular.setEnabled(false);

        salarioCalcular.setForeground(gris);
        ingresarText.setForeground(gris);
        calcular.setEnabled(false);
        ///////////////////////////////////
        ASC.setEnabled(false);
        CC.setEnabled(false);
        ANC.setEnabled(false);
        ORC.setEnabled(false);
        ASC.setSelected(false);
        CC.setSelected(false);
        ANC.setSelected(false);
        ORC.setSelected(false);
        sB.setText("₡0");
        sS.setText("₡0");
        cP.setText("₡0");
        bP.setText("₡0");
        iR.setText("₡0");
        s.setText("₡0");
        c.setText("₡0");
        aN.setText("₡0");
        oR.setText("₡0");
        sN.setForeground(gris);
        sB.setForeground(gris);
        sS.setForeground(gris);
        cP.setForeground(gris);
        bP.setForeground(gris);
        iR.setForeground(gris);
        s.setForeground(gris);
        c.setForeground(gris);
        aN.setForeground(gris);
        oR.setForeground(gris);
        sN.setForeground(gris);
        ahorroN.setForeground(gris);
        otrosR.setForeground(gris);
        otrosR.setText("cantidad de rabjo en colones");
        ahorroN.setText("cantidad a digitar es en porcentaje");
        nombreUsuario.setText("El nombre del usario aparecera aqui una vez sea encontrado");
        nombreUsuario.setForeground(gris);

    }//GEN-LAST:event_ingresarId

    private void buscar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscar
        idBuscado = verificarEntero(this.id.getText());


    }//GEN-LAST:event_buscar

    private void click(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_click

        ASC.addActionListener(new ManejaCheck());
        CC.addActionListener(new ManejaCheck());
        ANC.addActionListener(new ManejaCheck());
        ORC.addActionListener(new ManejaCheck());
    }//GEN-LAST:event_click

    private void ingresarSalario(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresarSalario

        if (salarioCalcular.isEnabled()) {
            salarioCalcular.setText("");
        }

    }//GEN-LAST:event_ingresarSalario

    private void IngresarAhorro(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngresarAhorro
        if (ahorroN.isEnabled()) {
            ahorroN.setText("");
        }

    }//GEN-LAST:event_IngresarAhorro

    private void IngresarRebajos(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngresarRebajos
        if (otrosR.isEnabled()) {
            otrosR.setText("");
        }

    }//GEN-LAST:event_IngresarRebajos

    private void calcularSalarios(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calcularSalarios

        double ahorroNavidad;
        double otrosRebajos;
        double asociacionS;
        double cooperativa;
        boolean planilla;
        salarioBruto = ComprobarSalarioDouble(this.salarioCalcular.getText(), "SALARIO A CALCULAR");

        if (ANC.isSelected()) {
            ahorroNavidad = ComprobarSalarioDouble(ahorroN.getText(), "AHORRO NAVIDEÑO");
        } else {
            ahorroNavidad = 0.0;
        }
        if (ORC.isSelected()) {
            otrosRebajos = ComprobarSalarioDouble(otrosR.getText(), "OTROS REBAJOS");
        } else {
            otrosRebajos = 0.0;
        }

        if (ANC.isSelected() && ORC.isSelected()) {
            if (salarioBruto > 0 && (ahorroNavidad > 0 && ahorroNavidad <= 80) && otrosRebajos > 0) {

                salario.llenadoArrayList(idBuscado, nombreCompleto, puesto, salarioBruto, ahorroNavidad, otrosRebajos, check1, check2);
            
                this.sB.setText("₡ " + objDF.format(salarioBruto));
                this.sS.setText("₡ " + objDF.format(salario.getSeguroSocial()));
                this.cP.setText("₡ " + objDF.format(salario.getCoutaPension()));
                this.bP.setText("₡ " + objDF.format(salario.getBancoPopular()));
                this.iR.setText("₡ " + objDF.format(salario.getImpuestoRenta()));
                this.s.setText("₡ " + objDF.format(salario.getSolidarista()));
                this.c.setText("₡ " + objDF.format(salario.getCooperativa()));
                this.aN.setText("₡ " + objDF.format(salario.getAhorroNavidad()));
                this.oR.setText("₡ " + objDF.format(salario.getOtrosRebajos()));
                this.sN.setText("₡ " + objDF.format(salario.getSalarioNeto()));

            } else {
                JOptionPane.showMessageDialog(this, " PORFAVOR INGRESE VALORES CORRECTAMENTE", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        } else if (!ANC.isSelected() && !ORC.isSelected()) {
            if (salarioBruto > 0) {

                salario.llenadoArrayList(idBuscado, nombreCompleto, puesto, salarioBruto, ahorroNavidad, otrosRebajos, check1, check2);
                this.sB.setText("₡ " + objDF.format(salarioBruto));
                this.sS.setText("₡ " + objDF.format(salario.getSeguroSocial()));
                this.cP.setText("₡ " + objDF.format(salario.getCoutaPension()));
                this.bP.setText("₡ " + objDF.format(salario.getBancoPopular()));
                this.iR.setText("₡ " + objDF.format(salario.getImpuestoRenta()));
                this.s.setText("₡ " + objDF.format(salario.getSolidarista()));
                this.c.setText("₡ " + objDF.format(salario.getCooperativa()));
                this.aN.setText("₡ " + objDF.format(salario.getAhorroNavidad()));
                this.oR.setText("₡ " + objDF.format(salario.getOtrosRebajos()));
                this.sN.setText("₡ " + objDF.format(salario.getSalarioNeto()));

            } else {
                JOptionPane.showMessageDialog(this, " PORFAVOR INGRESE VALORES CORRECTAMENTE", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        } else if (!ANC.isSelected() || !ORC.isSelected()) {
            if (salarioBruto > 0) {

                salario.llenadoArrayList(idBuscado, nombreCompleto, puesto, salarioBruto, ahorroNavidad, otrosRebajos, check1, check2);
                this.sB.setText("₡ " + objDF.format(salarioBruto));
                this.sS.setText("₡ " + objDF.format(salario.getSeguroSocial()));
                this.cP.setText("₡ " + objDF.format(salario.getCoutaPension()));
                this.bP.setText("₡ " + objDF.format(salario.getBancoPopular()));
                this.iR.setText("₡ " + objDF.format(salario.getImpuestoRenta()));
                this.s.setText("₡ " + objDF.format(salario.getSolidarista()));
                this.c.setText("₡ " + objDF.format(salario.getCooperativa()));
                this.aN.setText("₡ " + objDF.format(salario.getAhorroNavidad()));
                this.oR.setText("₡ " + objDF.format(salario.getOtrosRebajos()));
                this.sN.setText("₡ " + objDF.format(salario.getSalarioNeto()));

            } else {
                JOptionPane.showMessageDialog(this, " PORFAVOR INGRESE VALORES CORRECTAMENTE", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
        sN.setForeground(azulOscuro);
        sB.setForeground(azulOscuro);
        sS.setForeground(azulOscuro);
        cP.setForeground(azulOscuro);
        bP.setForeground(azulOscuro);
        iR.setForeground(azulOscuro);
        s.setForeground(azulOscuro);
        c.setForeground(azulOscuro);
        aN.setForeground(azulOscuro);
        oR.setForeground(azulOscuro);
        sN.setForeground(azulOscuro);

        salarioCalcular.setText("₡0");
        id.setText("Ingrese el Id del usuario");
        salarioCalcular.setEnabled(false);
        escribirArchivo(historialCalculados);

        JoptionPLanilla();


    }//GEN-LAST:event_calcularSalarios

    private void otrosRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otrosRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otrosRActionPerformed

    private void calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calcularActionPerformed
    /**
     * **************************************************************************************
     */
    //METODOS

    //VERIFICA SI EL ID ES ENTERO 
    public int verificarEntero(String id) {
        int n = 0;
        boolean existe;

        try {
            n = Integer.parseInt(id);
            existe = verficarUsuario(n);
            if (existe) {
                nombreUsuario(n);
            } else {
                JOptionPane.showMessageDialog(this, " EL ID INGRESADO NO EXISTE POR FAVOR INGRESE UNO CORRECTAMENTE", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            return n;

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, " EL ID INGRESADO NO ES UN NUMERO POR FAVOR INGRESE UNO CORRECTAMENTE ", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        return n;
    }
    
    // BUSCA QUE EL USUARIO EXISTA
    public boolean verficarUsuario(int id) {
        boolean existe = false;
        for (int i = 0; i < ListaEmpleados.size(); i++) {
            if (ListaEmpleados.get(i).getId() == id) {
                existe = true;
                break;

            } else {
                existe = false;
            }
        }
        return existe;
    }
// METODO PARA ENCONTRAR EL USUARIO Y ASIGNARLO AL CUADRO
    public void nombreUsuario(int id) {

        for (int i = 0; i < ListaEmpleados.size(); i++) {

            if (ListaEmpleados.get(i).getId() == id) {

                JOptionPane.showMessageDialog(this, " EL ID INGRESADO HA SIDO ENCONTRADO CORRECTAMENTE ", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
                nombreUsuario.setText(ListaEmpleados.get(i).getNombre() + "  " + ListaEmpleados.get(i).getApellido());
                nombreCompleto = ListaEmpleados.get(i).getNombre() + "  " + ListaEmpleados.get(i).getApellido();
                puesto = ListaEmpleados.get(i).getPuesto();
                nombreUsuario.setForeground(azulOscuro);
                /////////////////////////////////////

                this.salarioCalcular.setEnabled(true);

                this.salarioCalcular.setForeground(azulOscuro);
                this.ingresarText.setForeground(azulOscuro);
                this.calcular.setEnabled(true);

                ///////////////////////////////////
                this.ASC.setEnabled(true);
                this.CC.setEnabled(true);
                this.ANC.setEnabled(true);
                this.ORC.setEnabled(true);
                break;

            }
        }
    }
    
    // METODO PARA COMPROBAR SI SE INGRESO UN NUMERO AL SALARIO
    public double ComprobarSalarioDouble(String salario, String mensaje) {
        double valor = 0;
        try {
            valor = Double.parseDouble(salario);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "HA INGRESADO UN VALOR INCORRECTO EN EL CAMPO: " + mensaje, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        return valor;
    }

    /**
     * **************************************************************************
     */
    //MANEJO DE CHECK
    // una clase privada anidada para el manejo de los checks
    private class ManejaCheck implements ActionListener {

        public void actionPerformed(ActionEvent e) {

            if (ASC.isSelected()) {

                check1 = true;
            } else {
                check1 = false;
            }
            if (CC.isSelected()) {
                check2 = true;
            } else {
                check2 = false;
            }
            if (ANC.isSelected()) {

                salarioCalcular.setEnabled(true);
                salarioCalcular.setForeground(azulOscuro);
                calcular.setEnabled(true);
                ahorroN.setEnabled(true);
                ahorroN.setForeground(azulOscuro);
                ahorrosText.setForeground(azulOscuro);
            } else {

                ahorrosText.setForeground(gris);
                ahorroN.setEnabled(false);
                ahorroN.setText("la cantidad a digitar es en porcentaje");
                ahorroN.setForeground(gris);
            }
            if (ORC.isSelected()) {
                salarioCalcular.setEnabled(true);
                calcular.setEnabled(true);
                setForeground(azulOscuro);
                otrosR.setEnabled(true);
                otrosR.setForeground(azulOscuro);
                otrosText.setForeground(azulOscuro);
            } else {
                otrosText.setForeground(gris);
                otrosR.setEnabled(false);

                otrosR.setText("cantidad de rabjo en colones ");
                otrosR.setForeground(gris);
            }

            if ((ANC.isSelected() == false && ORC.isSelected() == false)) {
                salarioCalcular.setEnabled(true);
                calcular.setEnabled(true);
            }

        }
    }
// ESCRIBE EL ARCHIVO DE HISTORIAL
    public void escribirArchivo(ArrayList<CSalarioDeduccionesVoluntarias> lista) {

        try {
            FileWriter fileWriter = new FileWriter("historial.txt");
            PrintWriter printWriter = new PrintWriter(fileWriter);// imprime con formato de objetos
            for (CSalarioDeduccionesVoluntarias s : historialCalculados) {
                printWriter.println(s.getId() + "," + s.getNombre() + "," + s.getPuesto() + "," + s.getSalarioBruto() + "," + s.getSalarioNeto() + "," + s.getRebajos());

            }
            printWriter.close();

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "ERRO NO SE HA PODIDO CREAR EL ARCHIVO ", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }
// LEE EL ARCHIVO DE HISTORIAL
    public void leerArchivo() {

        try {
            File archivo = new File("historial.txt");
            Scanner scanner = new Scanner(archivo);
            while (scanner.hasNextLine()) {
                String linea = scanner.nextLine();
                String[] datos = linea.split(",");
                int id = Integer.parseInt(datos[0]);
                String nombreCompleto = datos[1];
                String puesto = datos[2];
                double salarioBruto = Double.parseDouble(datos[3]);
                double salarioNeto = Double.parseDouble(datos[4]);
                double Deducciones = Double.parseDouble(datos[5]);
                historialCalculados.add(new CSalarioDeduccionesVoluntarias(id, nombreCompleto, puesto, salarioBruto, salarioNeto, Deducciones));

            }

        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "ERRO NO SE HA ENCONTRADO EL ARCHIVO POR FAVOR INGRESE UN PRIMER DATO ", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }
//MUESTRA EL JOPTION PARA SOLICITAR SI LO INGRESA A PLANILLA
    public void JoptionPLanilla() {
        String[] opciones = {"Planilla 1", "Planilla 2"};
        JComboBox<String> planilla = new JComboBox<>(opciones);
        JTextField introducirFecha = new JTextField();
        Object[] components = {"Seleccione una opcion:", planilla, "Ingrese un valor:", introducirFecha};

        int option = JOptionPane.showConfirmDialog(null, components, "PLANILLA", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            opcionSeleccionada = planilla.getSelectedItem().toString();
            String fecha = introducirFecha.getText();
            this.salarioNeto = salario.getSalarioNeto();
            if (validacionFecha(fecha)) {
                empleados.IngresarPlanillas(idBuscado, opcionSeleccionada, mes, anio, salarioNeto);
                escribirArchivoPlanilla(planillasImpresas);
            }
        }
    }
// VALIDA QUE SE HAYA INGRESADO LA FECHA BIEN 
    public boolean validacionFecha(String fecha) {
        String fechaIngresada = "";
        boolean correcto = false;
        try {
            String[] componentes = fecha.split("/");
            mes = Integer.parseInt(componentes[0]);
            anio = Integer.parseInt(componentes[1]);

            if (mes < 1 || mes > 12 || anio < 1000 || anio > 9999) {
                JOptionPane.showMessageDialog(this, "HA INGRESADO UNA FECHA INCORRECTA POR FAVOR VERIFIQUE LO QUE ESCRIBIO  ", "ERROR", JOptionPane.ERROR_MESSAGE);
                correcto = false;
            } else {
                correcto = true;
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "HA INGRESADO UNA FECHA INCORRECTA POR FAVOR ESCRIBA DE NUEVO LA FECHA CON EL SIGUIENTE FORMATO M/A", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "HA INGRESADO UNA FECHA INCORRECTA POR FAVOR ESCRIBA DE NUEVO LA FECHA CON EL SIGUIENTE FORMATO M/A", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        return correcto;
    }
// ESCRIBE EL ARCHIVO DE PLANILLA
    public void escribirArchivoPlanilla(ArrayList<cEmpleado> planilla) {

        try {
            FileWriter fileWriter = new FileWriter("planillas.txt");
            PrintWriter printWriter = new PrintWriter(fileWriter);// imprime con formato de objetos
            for (cEmpleado p : planilla) {
                printWriter.println(p.getId() + "," + p.getPlanilla() + "," + p.getMesPlanilla() + "," + p.getAnioPlanilla() + "," + p.getSalarioNetoPlanilla() + ",");
            }
            printWriter.close();

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "ERRO NO SE HA PODIDO CREAR EL ARCHIVO ", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
// LEE EL ARCHIVO DE PLANILLA
    public void leerArchivoPlanilla() {

        try {
            File archivo = new File("planillas.txt");
            Scanner scanner = new Scanner(archivo);
            while (scanner.hasNextLine()) {
                String linea = scanner.nextLine();
                String[] datos = linea.split(",");
                int id = Integer.parseInt(datos[0]);
                String planilla = datos[1];
                int mes = Integer.parseInt(datos[2]);
                int anio = Integer.parseInt(datos[3]);
                double salarioNeto = Double.parseDouble(datos[4]);
                empleados = new cEmpleado(id, planilla, mes, anio, salarioNeto);
                planillasImpresas.add(empleados);

            }

        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "ERRO NO SE HA ENCONTRADO EL ARCHIVO POR FAVOR INGRESE UN PRIMER DATO ", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }

    //************************************************************************************************************************     
    // atributos 
    private Color azulOscuro = new Color(39, 76, 119);
    private Color gris = new Color(139, 140, 137);
    public static ArrayList<cEmpleado> ListaEmpleados = new ArrayList<cEmpleado>();
    private cEmpleado empleados = new cEmpleado();
    private boolean check1, check2;
    private double ahorroNavidad, otrosRebajos;
    private ArrayList<CSalarioDeduccionesVoluntarias> historial = new ArrayList<CSalarioDeduccionesVoluntarias>();
    private CSalarios salarios = new CSalarios();
    private CSalarioDeduccionesVoluntarias salario = new CSalarioDeduccionesVoluntarias();
    private String opcionSeleccionada;
    private double salarioNeto;

    private Historial historialC;
    private int mes;
    private int anio;

    private double salarioBruto;
    private int idBuscado;
    private String nombreCompleto;
    private String puesto;
    private String fecha;
    private Planilla p;
    String patron = "###,###.##";
    DecimalFormat objDF = new DecimalFormat(patron);


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ANC;
    private javax.swing.JCheckBox ASC;
    private javax.swing.JCheckBox CC;
    private javax.swing.JLabel Cooperativa;
    private javax.swing.JCheckBox ORC;
    private javax.swing.JLabel aN;
    private javax.swing.JTextField ahorroN;
    private javax.swing.JLabel ahorrosText;
    private javax.swing.JLabel bP;
    private javax.swing.JButton buscar;
    private javax.swing.JLabel c;
    private javax.swing.JLabel cP;
    private javax.swing.JButton calcular;
    private javax.swing.JLabel iR;
    private javax.swing.JTextField id;
    private javax.swing.JLabel ingresarText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nombreUsuario;
    private javax.swing.JLabel oR;
    private javax.swing.JTextField otrosR;
    private javax.swing.JLabel otrosText;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JLabel s;
    private javax.swing.JLabel sB;
    private javax.swing.JLabel sN;
    private javax.swing.JLabel sS;
    private javax.swing.JTextField salarioCalcular;
    private javax.swing.JLabel textAN;
    private javax.swing.JLabel textBP;
    private javax.swing.JLabel textCP;
    private javax.swing.JLabel textIR;
    private javax.swing.JLabel textOR;
    private javax.swing.JLabel textS;
    private javax.swing.JLabel textSB;
    private javax.swing.JLabel textSN;
    private javax.swing.JLabel textSS;
    private javax.swing.JPanel ubicacionCalculadora;
    private javax.swing.JPanel ubicacionResultados;
    // End of variables declaration//GEN-END:variables
}
